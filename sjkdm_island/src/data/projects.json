[
    {
        "id": 1,
        "title": "Django NLTK",
        "description": "Django web app with basic natural language processing using nltk. Deployed to Heroku",
        "tags": ["django", "rest api", "nltk", "nlp", "heroku"],
        "url": "https://github.com/daniel-sjkdm/djangonltk",
        "website": "https://djangonltk.herokuapp.com"
    },
    {
        "id": 2,
        "title": "Vaishnabot",
        "description": "Telegram bot to fetch Vaishnavism events and send them as pdf documents. Deployed to Heroku",
        "tags": ["python", "telegram", "heroku"],
        "url": "https://github.com/daniel-sjkdm/VaishnavismNotifyTBot"
    },
    {
        "id": 3,
        "title": "Vaishnavism scrapper",
        "description": "Web scrapper that fetchs vaishnavism events and store them at a postgresql database",
        "tags": ["python", "web scrapping", "scrapy", "postgresql"],
        "url": "https://github.com/daniel-sjkdm/VaishnavismScrapper"
    },
    {
        "id": 4,
        "title": "Store database",
        "description": "Modeling a store database with postgresql as RDBMS and implementing advanced features such as stored procedures",
        "tags": ["postgresql"],
        "url": "https://github.com/daniel-sjkdm/StoreDatabase"
    },
    {
        "id": 5,
        "title": "Google Drive Backup CLI",
        "description": "Using the Google Drive API and watchdogs to synchronize the local filesystem to the cloud everytime an event is detected",
        "tags": ["python", "api", "watchdog"],
        "url": "https://github.com/daniel-sjkdm/Gapy"
    },
    {
        "id": 6,
        "title": "Pandacovid",
        "description": "Coronavirus data analysis using pandas and seaborn to display world wide statistics",
        "tags": ["python", "pandas", "seaborn"],
        "url": "https://github.com/daniel-sjkdm/PandaCovid"
    },
    {
        "id": 7,
        "title": "Consumming APIs",
        "description": "Consuming three APIs: reddit, spotify and world statistics with python to make http requests and fetch data",
        "tags": ["python", "rest api"],
        "url": "https://github.com/daniel-sjkdm/ConsumingAPIs"
    },
    {
        "id": 9,
        "title": "Store rest api",
        "description": "Creation of a REST API to make http requests using a JWT token with django",
        "tags": ["django", "jwt", "rest api", "heroku"],
        "url": "https://github.com/daniel-sjkdm/django-rest-api-heroku"
    }
]