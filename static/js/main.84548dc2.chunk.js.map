{"version":3,"sources":["components/Navigation.js","components/SkillItem.js","components/CastleIcon.js","components/Home.js","components/ProjectItem.js","components/Projects.js","components/About.js","components/Footer.js","App.js","serviceWorker.js","index.js","assets/img/cultures.svg","assets/img/people.svg"],"names":["useStyles","makeStyles","theme","root","marginBottom","backgroundColor","title","flexGrow","fontFamily","fontSize","link","paddingRight","paddingLeft","color","Navigation","props","classes","AppBar","position","className","Toolbar","Typography","variant","style","display","to","offset","textAlign","paddingTop","item","paper","height","borderRadius","marginTop","SkillItem","skills","Paper","elevation","List","content","map","skill","index","ListItem","key","img","ListItemAvatar","Avatar","src","alt","ListItemText","primary","disableTypography","level","n","CastleIcon","castle","width","body","justifyContent","alignItems","alignContent","flexDirection","subtitle","description","castleLogo","Home","Container","Grid","container","spacing","lg","md","xs","interestSkills","techSkills","card","boxShadow","border","cardHeader","cardBody","ProjectItem","tags","Card","CardHeader","CardContent","tag","length","CardActions","Button","size","href","Projects","useState","projects","setProjects","useEffect","project_list","project","sm","id","Box","text","button","form","paddingBottom","icon","CustomTextField","withStyles","borderBottomColor","borderColor","TextField","About","useForm","handleSubmit","register","errors","open","setOpen","handleClose","people","onSubmit","values","console","log","emailjs","send","subject","email","message","then","result","error","alert","name","label","InputLabelProps","InputProps","startAdornment","InputAdornment","inputRef","required","pattern","autoComplete","helperText","multiline","rows","type","Snackbar","autoHideDuration","onClose","Alert","severity","githubicon","Footer","IconButton","target","rel","app","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.84548dc2.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport '../assets/css/Navigation.css';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: \"40px\",\n        backgroundColor: \"#121414\"\n    },\n    title: {\n        flexGrow: 1,\n        fontFamily: \"UnifrakturMaguntia\",\n        fontSize: \"30px\"\n    },\n    link: {\n        paddingRight: \"15px\",\n        paddingLeft: \"15px\",\n        color: \"white\"\n    }\n}));\n\n\nconst Navigation = (props) => {\n    const classes = useStyles();\n    return (\n        <div>\n            <AppBar position=\"static\" className={classes.root}>\n                <Toolbar>\n                    <Typography \n                        variant=\"h5\"\n                        className={classes.title}\n                    > Sjukdom Castle </Typography>\n                <div style={{display: \"flex\"}}>\n                    <Link to=\"/\">\n                        <Typography className={classes.link}>\n                            Home\n                        </Typography>\n                    </Link>\n                    <Link to=\"/projects\">\n                        <Typography className={classes.link}>\n                            Projects\n                        </Typography>\n                    </Link>\n                    <Link to=\"/about\">\n                        <Typography className={classes.link}>\n                            About\n                        </Typography>\n                    </Link>\n                </div>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.offset} />\n        </div>\n    );\n}\n\nexport default Navigation;","import React from 'react';\nimport { Paper, List, ListItem, ListItemText, ListItemAvatar, Avatar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\n\nconst useStyles = makeStyles({\n    title: {\n        fontFamily: \"Sans Serif\",\n        textAlign: \"center\",\n        color: \"white\",\n        paddingTop: \"20px\"\n    },\n    item: {\n        color: \"#4DD779\", \n        fontFamily: \"Space Mono, mono space\"\n    },\n    paper: {\n        height: \"380px\",\n        borderRadius: \"10px\",\n        backgroundColor: \"#121414\",\n        marginTop: \"20px\"\n    }\n});\n\n\n\nconst SkillItem = ({skills}) => {\n    const classes = useStyles();\n    return (\n        <div>\n            <Paper elevation={3} className={classes.paper}>\n                <Typography variant=\"h4\" className={classes.title}> { skills.title } </Typography>\n                <List>\n                    {\n                        skills.content.map((skill, index) => (\n                            <ListItem key={index}>\n                                { \n                                    skill.img? (\n                                        <ListItemAvatar>\n                                            <Avatar>\n                                                <img src={skill.img} alt=\"\"/>\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                    ) : \"\" \n                                }\n                                <ListItemText primary={<Typography className={classes.item}> {skill.skill} </Typography>} disableTypography={true} />\n                                {\n                                    skill.level? ( \n                                        [1, 2, 3, 4, 5].map((n, index) => (\n                                            n <= skill.level ? (\n                                                <StarIcon key={index} style={{ color: \"#4DD779\" }} />\n                                            ): <StarBorderIcon key={index} style={{ color: \"#4DD779\" }} />\n                                        ))\n                                    ) : \"\"\n                                }\n                            </ListItem>\n                        ))\n                    }\n                </List>\n            </Paper>\n        </div>\n    );\n}\n\n\nexport default SkillItem;","import React from 'react';\nimport castle from '../assets/img/cultures.svg';\n\n\nconst CastleIcon = (props) => {\n    return (\n        <div>   \n            <img src={castle} width={150} height={150} alt=\"\"/>\n        </div>\n    );\n}\n\nexport default CastleIcon;","import React from 'react';\nimport { Typography, Grid, Container } from '@material-ui/core';\nimport SkillItem from './SkillItem';\nimport { makeStyles } from '@material-ui/styles';\nimport techSkills from '../data/techSkills.json';\nimport interestSkills from '../data/interests.json';\nimport CastleIcon from './CastleIcon';\n\n\nconst useStyles = makeStyles({\n    body: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignContent: \"space-around\",\n        flexDirection: \"column\",\n        backgroundColor: \"#121414\",\n        borderRadius: \"10px\",\n        paddingTop: \"20px\",\n        paddingLeft: \"15px\",\n        paddingRight: \"15px\",\n    },\n    title: {\n        fontFamily: \"Libre Baskerville, serif\",\n        fontSize: \"70px\",\n        color: \"white\",\n        textAlign: \"center\",\n        marginBottom: \"30px\",\n    },\n    subtitle: {\n        fontFamily: \"Libre Baskerville, serif\",\n        fontSize: \"20px\",\n        color: \"white\",\n        textAlign: \"center\",\n        marginBottom: \"50px\"\n    },\n    description: {\n        fontFamily: \"Libre Baskerville, serif\",\n        fontSize: \"18px\",\n        color: \"white\",\n        textAlign: \"center\",\n        marginTop: \"50px\",\n        marginBottom: \"50px\"\n    },\n    castleLogo: {\n\n    }\n});\n\n\n\nconst Home = (props) => {\n    const classes = useStyles();\n    return (\n        <Container>\n            <div>\n                <div className={classes.body}>\n                    <Typography variant=\"h1\" className={classes.title}>\n                        Welcome to my castle\n                    </Typography>\n                    <Typography variant=\"h5\" className={classes.subtitle}>\n                        The beginning of a long journey has just started!\n                    </Typography>\n                    <CastleIcon />\n                    <Typography variant=\"body2\" className={classes.description} >\n                        I'm a 25 years old software developer from Mexico interested in learning     <br/>\n                        and understanding new technologies and improving my skills                   <br/>\n                        to keep building this castle the best way I can.                             <br/>\n                    </Typography>\n\n                </div>\n                <Grid container spacing={3}>\n                    <Grid item lg={6} md={6} xs={12}>\n                        <SkillItem skills={interestSkills} />\n                    </Grid>\n                    <Grid item lg={6} md={6} xs={12}>\n                        <SkillItem skills={techSkills} />\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport {\n    Card,\n    CardHeader,\n    CardContent,\n    Button,\n    Typography,\n    CardActions,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        height: \"350px\",\n        borderRadius: \"30px\",\n        boxShadow: \"-30px 20px 20px rgba(0, 0, 0, 0.3)\",\n        border: \"1px solid #4DD779\",\n        backgroundColor: \"#121414\",\n    },\n    cardHeader: {\n        fontFamily: \"Space Mono, mono space\",\n        textAlign: \"center\",\n        backgroundColor: \"#222222\",\n        color: \"white\"\n    },\n    cardBody: {\n        color: \"white\",\n        fontFamily: \"Space Mono, mono space\",\n        textAlign: \"justify\"\n    }\n}));\n\n\nconst ProjectItem = ({title, description, link, tags}) => {\n    const classes = useStyles();\n    return (\n        <div>\n            <Card className={classes.card}>\n                <CardHeader \n                    disableTypography={true} \n                    title={<Typography style={{\n                        fontFamily: \"Space Mono, mono space\"\n                    }}> { title } </Typography>}\n                    className={classes.cardHeader}/>\n                <CardContent> \n                        <p style={{color: \"#4DD779\", fontFamily: \"Space Mono, mono space\"}}> sjukdom@castle $ ./project.sh   </p> \n                        <Typography variant=\"body2\" className={classes.cardBody}>\n                        { description } \n                        <br/>\n                        <br/>\n                        Tags:\n                        <br/>\n                        <br/> \n                    { \n                        tags.map((tag, index) => (\n                            index === tags.length-1? ( \n                                tag \n                            ) : tag + \", \"\n                        )) \n                    }\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button \n                        size=\"small\"\n                        variant=\"contained\" \n                        color=\"inherit\"\n                        href={link}\n                    > View </Button>\n                </CardActions>\n            </Card>\n        </div>\n    );\n}\n\n\nexport default ProjectItem;","import React, { useState, useEffect } from 'react';\nimport Project from './ProjectItem';\nimport project_list from '../data/projects.json';\nimport { Grid, Box } from '@material-ui/core';\n\n\nconst Projects = (props) => {\n\n    const [projects, setProjects] = useState([]);\n    \n    useEffect(() => {\n        const fetchProjects = () => {\n            setProjects(project_list);\n        }\n        fetchProjects();\n    }, []);\n    \n    return (\n        <div>\n            <Grid container spacing={4}>\n                    {\n                        projects.map((project) => (\n                            <Grid item lg={4} md={6} sm={12} key={project.id}>\n                                <Box>\n                                    <Project \n                                        title = {project.title} \n                                        description = {project.description} \n                                        link = {project.link}\n                                        tags = {project.tags}\n                                    />\n                                </Box>\n                            </Grid>\n                        ))\n                    }\n            </Grid>\n        </div>\n    );\n}\n\nexport default Projects;","import React, { useState } from 'react';\nimport emailjs from 'emailjs-com';\nimport { useForm } from 'react-hook-form';\nimport { TextField, Button, Typography, InputAdornment, Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport { makeStyles, withStyles } from '@material-ui/styles';\nimport people from '../assets/img/people.svg';\n\n\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n    },\n    text: {\n        width: \"450px\",\n        marginBottom: \"20px\",\n        color: \"white\",\n    },\n    button: {\n        backgroundColor: \"#4DD779\"\n    },\n    form: {\n        backgroundColor: \"#121414\",\n        marginTop: \"20px\",\n        paddingTop: \"20px\",\n        paddingBottom: \"20px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\"\n    },\n    icon: {\n        color: \"#4DD779\"\n    }\n});\n\n\nconst CustomTextField = withStyles({\n    root: {\n        \"& label.Mui-focused\": {\n            color: \"#4DD779\"\n        },\n        \"& .MuiInput-underline:after\": {\n            borderBottomColor: \"#4DD779\"\n        },\n        \"& .MuiOutlinedInput-root\": {\n            \"& fieldset\": {\n              borderColor: \"#4DD779\",\n            },\n            \"&:hover fieldset\": {\n              borderColor: \"#4DD779\",\n            },\n            color: \"white\",\n            \"& .MuiOutlinedInput-notchedOutline\": {\n                borderColor: \"#4DD779\"\n            },\n            \"& .MuiInputLabel-outlined\": {\n                color: \"white\"\n            }\n        },\n        color: \"white\",\n        \"& .MuiFormLabel-root\": {\n            color: \"white\",\n        },\n        \"& .MuiInputBase-root\": {\n\n        }\n    },\n\n})(TextField);\n\n\nconst About = (props) => {\n\n    const classes = useStyles();\n    const { handleSubmit, register, errors } = useForm();\n    const [open, setOpen] = useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n\n    const sendEmail = (values) => {\n        console.log(values);\n\n        emailjs.send(\n            \"gmail\", \n            \"template_2c8k2cv\", \n            {\n                subject: values.subject,\n                email: values.email,\n                message: values.message\n            },\n            \"user_8dpnAh6jdqHYTcRzH2dOa\"\n        )\n        .then(result => {\n            setOpen(true);\n        }, error => {\n            alert(\"There was an error in the EmailJS server\");\n            console.log(error);\n        })\n    }\n\n\n    return (\n            <div className={classes.root}>\n                <img src={people} width={150} height={150} alt=\"\"/>\n                <form onSubmit={handleSubmit(sendEmail)} className={classes.form}> \n                <CustomTextField\n                    name=\"email\"\n                    label=\"Email\"\n                    variant=\"outlined\"\n                    error={errors.email? true : false}\n                    InputLabelProps={{}}\n                    className={classes.text}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <AlternateEmailIcon className={classes.icon}/>\n                            </InputAdornment>\n                        )\n                    }}\n                    inputRef={register({\n                        required: true,\n                        pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/i\n                    })}\n                    autoComplete=\"false\"\n                    helperText={errors.email? (\n                        errors.email.required? \"This field is required\" : \"Invalid email\"\n                    ): \"\"}\n                />\n                <br/>\n                <CustomTextField\n                    name=\"subject\"\n                    label=\"Subject\"\n                    variant=\"outlined\"\n                    error={errors.subject? true : false}\n                    InputLabelProps={{}}\n                    className={classes.text}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <SubjectIcon className={classes.icon}/>\n                            </InputAdornment>\n                        )\n                    }}\n                    inputRef={register({\n                        required: true,\n                    })}\n                    autoComplete=\"false\"\n                    helperText={errors.subject? \"This field is required\" : \"\"}\n                />\n                <br/>\n                <CustomTextField\n                    name=\"message\"\n                    label=\"Message\"\n                    variant=\"outlined\"\n                    error={errors.message? true : false}\n                    InputLabelProps={{}}\n                    className={classes.text}\n                    multiline\n                    rows={10}\n                    inputRef={register({\n                        required: true\n                    })}\n                    autoComplete=\"false\"\n                    helperText={errors.message? \"This field is required\" : \"\"}\n                />\n                    <br/>\n                    <Button variant=\"contained\" className={classes.button} type=\"submit\">\n                        <Typography style={{color: \"white\"}}> SEND  </Typography>\n                        <TelegramIcon/>\n                    </Button>\n                </form>\n\n                <Snackbar open={open} autoHideDuration={5000} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"success\"> Thank you for the message </Alert>\n                </Snackbar>\n            </div>\n    )\n}\n\n\nexport default About;","import React from 'react';\nimport { Typography, Grid, List, ListItem, ListItemText, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles = makeStyles({\n    root: {\n        backgroundColor: \"#121414\",\n        marginTop: \"50px\"\n    },\n    content: {\n        textAlign: \"center\",\n        color: \"white\",\n        marginTop: \"30px\"\n    },\n    githubicon: {\n        color: \"white\",\n        width: \"40px\",\n        height: \"40px\",\n        marginTop: \"10px\"\n    }\n});\n\n\n\nconst Footer = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}> \n            <Grid container>\n                <Grid item lg={6} md={6} xs={6}>\n                    <Typography className={classes.content}> You can find me at </Typography>\n                        <IconButton href=\"https://github.com/daniel-sjkdm\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ display: \"block\" }}>  \n                                <GitHubIcon className={classes.githubicon}/>\n                        </IconButton>\n                    <p style={{color: \"white\", textAlign: \"center\", fontSize: \"13px\"}}> github.com/daniel-sjkdm </p>\n                </Grid>\n                <Grid item lg={6} md={6} xs={6}>\n                    <Typography className={classes.content}> This site was built with </Typography>\n                    <List>\n                        <ListItem>\n                            <ListItemText \n                                disableTypography={true} \n                                primary={\n                                    <a style={{ color: \"white\", fontSize: \"15px\" }} href=\"https://reactjs.org/\" rel=\"noopener noreferrer\" target=\"_blank\"> React.js </a>\n                                } \n                                style={{textAlign: \"center\"}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText \n                                disableTypography={true} \n                                primary={\n                                    <a style={{ color: \"white\", fontSize: \"15px\" }} href=\"https://material-ui.com/\" target=\"_blank\" rel=\"noopener noreferrer\"> Material-UI </a>\n                                }\n                                style={{textAlign: \"center\"}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText \n                                disableTypography={true} \n                                primary={\n                                    <a style={{ color: \"white\", fontSize: \"15px\" }} href=\"https://www.emailjs.com/\" target=\"_blank\" rel=\"noopener noreferrer\"> EmailJS </a>\n                                }\n                                style={{textAlign: \"center\"}}\n                            />\n                        </ListItem>\n                    </List>\n                </Grid>    \n                <Grid item lg={12} md={12} xs={12}>\n                    <Typography className={classes.content}>\n                        Icons made by \n                        <a href=\"https://www.flaticon.com/authors/freepik\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Freepik\" style={{ color: \"#4DD779\" }}> Freepik </a> from <a href=\"https://www.flaticon.com/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: \"#4DD779\" }} title=\"Flaticon\"> www.flaticon.com</a>\n                    </Typography>\n                </Grid>\n            </Grid>         \n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport Home from './components/Home';\nimport Projects from './components/Projects';\nimport About from './components/About';\nimport Footer from './components/Footer';\nimport { makeStyles } from '@material-ui/styles';\nimport { Container } from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  app: {\n    backgroundColor: \"#2E3440\"\n  }\n}); \n\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.app}>\n        <BrowserRouter>\n        <Navigation />\n        <Container>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/projects\" component={Projects} />\n            <Route path=\"/about\" component={About} />\n          </Switch>\n        </Container>\n        <Footer />\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cultures.66151fee.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.d9c36406.svg\";"],"sourceRoot":""}