{"version":3,"sources":["components/SideBarList.js","components/Navigation.js","components/SkillItem.js","components/CastleIcon.js","components/Home.js","components/ProjectItem.js","components/Projects.js","components/About.js","components/Footer.js","App.js","serviceWorker.js","index.js","assets/img/brain.svg","assets/img/server.svg","assets/img/ux.svg","assets/img/database.svg","assets/img/computer.svg","assets/img/cultures.svg","assets/img/people.svg"],"names":["useStyles","makeStyles","list","backgroundColor","link","color","textDecoration","routes","style","SideBarList","handleClick","classes","onClick","map","item","index","List","key","className","to","url","ListItem","button","ListItemIcon","icon","ListItemText","primary","name","Divider","theme","root","marginBottom","title","flexGrow","fontFamily","fontSize","paddingRight","paddingLeft","link_title","CustomDrawer","withStyles","paper","width","Drawer","Navigation","props","useState","open","setOpen","toggleDrawer","event","type","anchor","onClose","AppBar","position","Toolbar","Typography","display","Hidden","xsDown","smUp","IconButton","interests_icon","AI","Backend","Frontend","Databases","Linux","textAlign","paddingTop","height","borderRadius","marginTop","SkillItem","skills","kind","Paper","elevation","variant","content","skill","ListItemAvatar","src","disableTypography","level","n","CastleIcon","castle","alt","body","justifyContent","alignItems","alignContent","flexDirection","subtitle","description","castleLogo","Home","Container","Grid","container","spacing","lg","md","xs","interestSkills","techSkills","card","boxShadow","border","cardHeader","cardBody","ProjectItem","tags","Card","CardHeader","CardContent","tag","length","CardActions","Button","size","href","target","Projects","projects","setProjects","useEffect","project_list","project","sm","id","Box","text","form","paddingBottom","CustomTextField","borderBottomColor","borderColor","TextField","About","useForm","handleSubmit","register","errors","handleClose","people","onSubmit","values","emailjs","send","subject","email","message","then","result","error","alert","console","log","label","InputLabelProps","InputProps","startAdornment","InputAdornment","inputRef","required","pattern","autoComplete","helperText","multiline","rows","Snackbar","autoHideDuration","Alert","severity","githubicon","Footer","rel","app","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.02ef389d.chunk.js","sourcesContent":["import React from 'react';\nimport { List, ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { Link } from 'react-router-dom';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\nimport CodeIcon from '@material-ui/icons/Code';\nimport HomeIcon from '@material-ui/icons/Home';\n\n\n\nconst useStyles = makeStyles({\n    list: {\n        \"&:hover\": {\n            backgroundColor: \"rgba(238,238,238,0.1)\",\n        }\n    },\n    link: {\n        color: \"white\",\n        textDecoration: \"none\"\n    }\n});\n\n\n\nconst routes = [\n    {\n        \"name\": \"Home\",\n        \"url\": \"/SjukdomCastle\",\n        \"icon\": <HomeIcon style={{color:\"white\"}}/>\n    },\n    {\n        \"name\": \"Projects\",\n        \"url\": \"/SjukdomCastle/projects\",\n        \"icon\": <CodeIcon style={{color:\"white\"}}/>\n    },\n    {\n        \"name\": \"Contact\",\n        \"url\": \"/SjukdomCastle/contact\",\n        \"icon\": <ContactMailIcon style={{color:\"white\"}}/>\n    }\n]\n\n\n\nconst SideBarList = ({handleClick}) => {\n    const classes = useStyles();    \n    return (\n        <div onClick={handleClick(false)}>\n            {\n                routes.map((item, index) => (\n                    <List key={index} className={classes.list}>\n                        <Link to={item.url} className={classes.link}>\n                            <ListItem button>\n                                <ListItemIcon> {item.icon} </ListItemIcon>\n                                <ListItemText primary={item.name} />\n                            </ListItem>\n                        </Link>\n                        <Divider />\n                    </List>\n                ))\n            }\n        </div>\n    )\n\n}\n\n\nexport default SideBarList;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Toolbar, Typography, IconButton, Drawer, Hidden } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SideBarList from './SideBarList';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: \"40px\",\n        backgroundColor: \"#121414\"\n    },\n    title: {\n        flexGrow: 1,\n        fontFamily: \"UnifrakturMaguntia\",\n        fontSize: \"25px\",\n        \"&:hover\": {\n            color: \"#4DD779\"\n        }\n    },\n    link: {\n        paddingRight: \"15px\",\n        paddingLeft: \"15px\",\n        color: \"white\",\n        textDecoration: \"none\",\n    },\n    link_title: {\n        fontFamily: \"UnifrakturMaguntia\",\n        fontSize: \"22px\",\n        \"&:hover\": {\n            color: \"#4DD779\"\n        }\n    }\n}));\n\n\nconst CustomDrawer = withStyles({\n    root: {\n        backgroundColor: \"rgba(238,238,238,0.4)\"\n    },\n    paper: {\n        backgroundColor: \"#121414\",\n        width: \"200px\",\n    }\n})(Drawer);\n\n\nconst Navigation = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);    \n\n    const toggleDrawer = (open) => event => {\n        if (event.type === 'keydown' && (event.key === 'Shift' || event.key === 'Tab')) {\n            return;\n        }\n        setOpen(open)\n    }\n\n    return (\n        <div>\n            <CustomDrawer\n                anchor=\"left\" \n                open={open} \n                onClose={toggleDrawer(false)}\n            >\n                <SideBarList handleClick={toggleDrawer}/>\n            </CustomDrawer>\n            <AppBar position=\"static\" className={classes.root}>\n                <Toolbar>\n                    <Typography className={classes.title}> Sjukdom Castle </Typography>\n                <div style={{display: \"flex\"}}>\n                    <Hidden xsDown>\n                        <Link to=\"/SjukdomCastle\" className={classes.link}>\n                            <Typography className={classes.link_title}> Home </Typography>\n                        </Link>\n                        <Link to=\"/SjukdomCastle/projects\" className={classes.link}>\n                            <Typography className={classes.link_title}> Projects </Typography>\n                        </Link>\n                        <Link to=\"/SjukdomCastle/contact\" className={classes.link}> \n                            <Typography className={classes.link_title}> Contact </Typography>\n                        </Link>\n                    </Hidden>\n                    <Hidden smUp>\n                        <IconButton onClick={toggleDrawer(true)}>\n                            <MenuIcon color=\"primary\"/>\n                        </IconButton>\n                    </Hidden>\n                </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default Navigation;","import React from 'react';\nimport { Paper, List, ListItem, ListItemText, ListItemAvatar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport AI from '../assets/img/brain.svg';\nimport Backend from '../assets/img/server.svg';\nimport Frontend from '../assets/img/ux.svg';\nimport Databases from '../assets/img/database.svg';\nimport Linux from '../assets/img/computer.svg';\n\n\nconst interests_icon = [\n    AI, \n    Backend,\n    Frontend,\n    Databases,\n    Linux\n];\n\n\nconst useStyles = makeStyles({\n    title: {\n        fontFamily: \"UnifrakturMaguntia\",\n        textAlign: \"center\",\n        color: \"white\",\n        paddingTop: \"20px\"\n    },\n    item: {\n        color: \"white\", \n        fontFamily: \"Space Mono, mono space\"\n    },\n    paper: {\n        height: \"380px\",\n        borderRadius: \"10px\",\n        backgroundColor: \"#121414\",\n        marginTop: \"20px\"\n    }\n});\n\n\n\nconst SkillItem = ({skills, kind}) => {\n    const classes = useStyles();\n    return (\n        <div>\n            <Paper elevation={3} className={classes.paper}>\n                <Typography variant=\"h4\" className={classes.title}> { skills.title } </Typography>\n                <List>\n                    {\n                        skills.content.map((skill, index) => (\n                            <ListItem key={index}>\n                                { \n                                    kind === \"interests\" ? (\n                                            <ListItemAvatar>\n                                                <img src={interests_icon[index]} width={37} height={37}/>\n                                            </ListItemAvatar>\n                                    ) : \"\" \n                                }\n                                <ListItemText primary={<Typography className={classes.item}> {skill.skill} </Typography>} disableTypography={true} />\n                                {\n                                    skill.level? ( \n                                        [1, 2, 3, 4, 5].map((n, index) => (\n                                            n <= skill.level ? (\n                                                <StarIcon key={index} style={{ color: \"#4DD779\" }} />\n                                            ): <StarBorderIcon key={index} style={{ color: \"#4DD779\" }} />\n                                        ))\n                                    ) : \"\"\n                                }\n                            </ListItem>\n                        ))\n                    }\n                </List>\n            </Paper>\n        </div>\n    );\n}\n\n\nexport default SkillItem;","import React from 'react';\nimport castle from '../assets/img/cultures.svg';\n\n\nconst CastleIcon = (props) => {\n    return (\n        <div>   \n            <img src={castle} width={150} height={150} alt=\"\"/>\n        </div>\n    );\n}\n\nexport default CastleIcon;","import React from 'react';\nimport { Typography, Grid, Container } from '@material-ui/core';\nimport SkillItem from './SkillItem';\nimport { makeStyles } from '@material-ui/styles';\nimport techSkills from '../data/techSkills.json';\nimport interestSkills from '../data/interests.json';\nimport CastleIcon from './CastleIcon';\n\n\nconst useStyles = makeStyles({\n    body: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignContent: \"space-around\",\n        flexDirection: \"column\",\n        backgroundColor: \"#121414\",\n        borderRadius: \"10px\",\n        paddingTop: \"20px\",\n        paddingLeft: \"15px\",\n        paddingRight: \"15px\",\n    },\n    title: {\n        fontFamily: \"UnifrakturMaguntia\",\n        fontSize: \"50px\",\n        color: \"white\",\n        textAlign: \"center\",\n        marginBottom: \"30px\",\n    },\n    subtitle: {\n        fontFamily: \"Space Mono, mono space\",\n        fontSize: \"18px\",\n        color: \"white\",\n        textAlign: \"center\",\n        marginBottom: \"50px\"\n    },\n    description: {\n        fontFamily: \"Space Mono, mono space\",\n        fontSize: \"17px\",\n        color: \"white\",\n        textAlign: \"center\",\n        marginTop: \"50px\",\n        marginBottom: \"50px\"\n    },\n    castleLogo: {\n\n    }\n});\n\n\n\nconst Home = (props) => {\n    const classes = useStyles();\n    return (\n        <Container>\n            <div>\n                <div className={classes.body}>\n                    <Typography variant=\"h1\" className={classes.title}>\n                        Welcome to my castle\n                    </Typography>\n                    <Typography variant=\"h5\" className={classes.subtitle}>\n                        The beginning of a long journey has just started!\n                    </Typography>\n                    <CastleIcon />\n                    <Typography variant=\"body2\" className={classes.description} >\n                        I'm a 25 years old software developer from Mexico interested in learning     \n                        and understanding <br/> backend development, databases and machine learning, and of course\n                        a little bit of front end. <br/> <br/>\n                        My main skill is to be an autodidact and I'm always curious on how things work  <br/>\n                        from scratch and that's why <br/> I wrote this website! <br/>\n                    </Typography>\n                </div>\n                <Grid container spacing={3}>\n                    <Grid item lg={6} md={6} xs={12}>\n                        <SkillItem skills={interestSkills} kind=\"interests\"/>\n                    </Grid>\n                    <Grid item lg={6} md={6} xs={12}>\n                        <SkillItem skills={techSkills} kind=\"tech\" />\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport {\n    Card,\n    CardHeader,\n    CardContent,\n    Button,\n    Typography,\n    CardActions,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        height: \"350px\",\n        borderRadius: \"30px\",\n        boxShadow: \"-30px 20px 20px rgba(0, 0, 0, 0.3)\",\n        border: \"1px solid #4DD779\",\n        backgroundColor: \"#121414\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignContent: \"center\",\n        justifyContent: \"space-between\"\n    },\n    cardHeader: {\n        fontFamily: \"Space Mono, mono space\",\n        textAlign: \"center\",\n        backgroundColor: \"#222222\",\n        color: \"white\"\n    },\n    cardBody: {\n        color: \"white\",\n        fontFamily: \"Space Mono, mono space\",\n        textAlign: \"justify\"\n    }\n}));\n\n\nconst ProjectItem = ({title, description, url, tags}) => {\n    const classes = useStyles();\n    return (\n        <div>\n            <Card className={classes.card}>\n                <CardHeader \n                    disableTypography={true} \n                    title={<Typography style={{\n                        fontFamily: \"Space Mono, mono space\"\n                    }}> { title } </Typography>}\n                    className={classes.cardHeader}/>\n                <CardContent> \n                        <p style={{color: \"#4DD779\", fontFamily: \"Space Mono, mono space\"}}> sjukdom@castle $ ./project.sh   </p> \n                        <Typography variant=\"body2\" className={classes.cardBody}>\n                        { description } \n                        <br/>\n                        <br/>\n                        Tags:\n                        <br/>\n                        <br/> \n                    { \n                        tags.map((tag, index) => (\n                            index === tags.length-1? ( \n                                tag \n                            ) : tag + \", \"\n                        )) \n                    }\n                    </Typography>\n                </CardContent>\n                <CardActions style={{\n                    display: \"flex\",\n                    alignContent: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\"\n                }}>\n                    <Button \n                        size=\"small\"\n                        variant=\"contained\" \n                        color=\"primary\"\n                        href={url}\n                        target=\"_blank\"\n                    > View </Button>\n                </CardActions>\n            </Card>\n        </div>\n    );\n}\n\n\nexport default ProjectItem;","import React, { useState, useEffect } from 'react';\nimport Project from './ProjectItem';\nimport project_list from '../data/projects.json';\nimport { Grid, Box } from '@material-ui/core';\n\n\nconst Projects = (props) => {\n\n    const [projects, setProjects] = useState([]);\n    \n    useEffect(() => {\n        const fetchProjects = () => {\n            setProjects(project_list);\n        }\n        fetchProjects();\n    }, []);\n    \n    return (\n        <div>\n            <Grid container spacing={4}>\n                    {\n                        projects.map((project) => (\n                            <Grid item lg={4} md={6} sm={12} key={project.id}>\n                                <Box>\n                                    <Project \n                                        title = {project.title} \n                                        description = {project.description} \n                                        url = {project.url}\n                                        tags = {project.tags}\n                                    />\n                                </Box>\n                            </Grid>\n                        ))\n                    }\n            </Grid>\n        </div>\n    );\n}\n\nexport default Projects;","import React, { useState } from 'react';\nimport emailjs from 'emailjs-com';\nimport { useForm } from 'react-hook-form';\nimport { Grid, TextField, Button, Typography, InputAdornment, Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport { makeStyles, withStyles } from '@material-ui/styles';\nimport people from '../assets/img/people.svg';\n\n\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        flexDirection: \"column\",\n    },\n    text: {\n        width: \"-webkit-fill-available\",\n        marginBottom: \"20px\",\n        color: \"white\",\n    },\n    button: {\n        backgroundColor: \"#4DD779\"\n    },\n    form: {\n        backgroundColor: \"#121414\",\n        marginTop: \"20px\",\n        paddingTop: \"20px\",\n        paddingBottom: \"20px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\",\n        borderRadius: \"5px\"\n    },\n    icon: {\n        color: \"#4DD779\"\n    }\n});\n\n\nconst CustomTextField = withStyles({\n    root: {\n        \"& label.Mui-focused\": {\n            color: \"#4DD779\"\n        },\n        \"& .MuiInput-underline:after\": {\n            borderBottomColor: \"#4DD779\"\n        },\n        \"& .MuiOutlinedInput-root\": {\n            \"& fieldset\": {\n              borderColor: \"#4DD779\",\n            },\n            \"&:hover fieldset\": {\n              borderColor: \"#4DD779\",\n            },\n            color: \"white\",\n            \"& .MuiOutlinedInput-notchedOutline\": {\n                borderColor: \"#4DD779\"\n            },\n            \"& .MuiInputLabel-outlined\": {\n                color: \"white\"\n            }\n        },\n        color: \"white\",\n        \"& .MuiFormLabel-root\": {\n            color: \"white\",\n        },\n        \"& .MuiInputBase-root\": {\n\n        }\n    },\n\n})(TextField);\n\n\nconst About = (props) => {\n\n    const classes = useStyles();\n    const { handleSubmit, register, errors } = useForm();\n    const [open, setOpen] = useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const sendEmail = (values) => {\n\n        emailjs.send(\n            \"gmail\", \n            \"template_2c8k2cv\", \n            {\n                subject: values.subject,\n                email: values.email,\n                message: values.message\n            },\n            \"user_8dpnAh6jdqHYTcRzH2dOa\"\n        )\n        .then(result => {\n            setOpen(true);\n        }, error => {\n            alert(\"There was an error in the EmailJS server\");\n            console.log(error);\n        })\n    }\n\n\n    return (\n        <Grid container className={classes.root}> \n            <Grid item lg={12} md={12} xs={12}>\n                    <img src={people} width={150} height={150} alt=\"\"/>\n            </Grid>\n            <Grid item lg={12} md={12} xs={12} style={{ width: \"600px\" }}>\n                    <form onSubmit={handleSubmit(sendEmail)} className={classes.form}> \n                    <CustomTextField\n                        name=\"email\"\n                        label=\"Email\"\n                        variant=\"outlined\"\n                        error={errors.email? true : false}\n                        InputLabelProps={{}}\n                        className={classes.text}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <AlternateEmailIcon className={classes.icon}/>\n                                </InputAdornment>\n                            )\n                        }}\n                        inputRef={register({\n                            required: true,\n                            pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/i\n                        })}\n                        autoComplete=\"false\"\n                        helperText={errors.email? (\n                            errors.email.required? \"This field is required\" : \"Invalid email\"\n                        ): \"\"}\n                    />\n                    <br/>\n                    <CustomTextField\n                        name=\"subject\"\n                        label=\"Subject\"\n                        variant=\"outlined\"\n                        error={errors.subject? true : false}\n                        InputLabelProps={{}}\n                        className={classes.text}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SubjectIcon className={classes.icon}/>\n                                </InputAdornment>\n                            )\n                        }}\n                        inputRef={register({\n                            required: true,\n                        })}\n                        autoComplete=\"false\"\n                        helperText={errors.subject? \"This field is required\" : \"\"}\n                    />\n                    <br/>\n                    <CustomTextField\n                        name=\"message\"\n                        label=\"Message\"\n                        variant=\"outlined\"\n                        error={errors.message? true : false}\n                        InputLabelProps={{}}\n                        className={classes.text}\n                        multiline\n                        rows={10}\n                        inputRef={register({\n                            required: true\n                        })}\n                        autoComplete=\"false\"\n                        helperText={errors.message? \"This field is required\" : \"\"}\n                    />\n                        <br/>\n                        <Button variant=\"contained\" className={classes.button} type=\"submit\">\n                            <Typography style={{color: \"white\"}}> SEND  </Typography>\n                            <TelegramIcon/>\n                        </Button>\n                    </form>\n                    <Snackbar open={open} autoHideDuration={5000} onClose={handleClose}>\n                        <Alert onClose={handleClose} severity=\"success\"> Thank you for the message </Alert>\n                    </Snackbar>\n                </Grid>\n            </Grid>\n    )\n}\n\n\nexport default About;","import React from 'react';\nimport { Typography, Grid, List, ListItem, ListItemText, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles = makeStyles({\n    root: {\n        backgroundColor: \"#121414\",\n        marginTop: \"50px\",\n    },\n    content: {\n        fontFamily: \"Space Mono, mono space\",\n        textAlign: \"center\",\n        color: \"white\",\n        marginTop: \"30px\"\n    },\n    githubicon: {\n        color: \"white\",\n        width: \"40px\",\n        height: \"40px\",\n        marginTop: \"10px\"\n    },\n    url: { \n        color: \"white\", \n        fontSize: \"15px\", \n        fontFamily: \"Space Mono, mono space\", \n        textDecoration: \"none\"\n    }\n});\n\n\n\nconst Footer = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}> \n            <Grid container>\n                <Grid item lg={6} md={6} xs={6}>\n                    <Typography className={classes.content}> You can find me at </Typography>\n                        <IconButton href=\"https://github.com/daniel-sjkdm\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ display: \"block\" }}>  \n                                <GitHubIcon className={classes.githubicon}/>\n                        </IconButton>\n                    <p style={{color: \"white\", textAlign: \"center\", fontSize: \"13px\"}}> github.com/daniel-sjkdm </p>\n                </Grid>\n                <Grid item lg={6} md={6} xs={6}>\n                    <Typography className={classes.content}> This site was built with </Typography>\n                    <List>\n                        <ListItem>\n                            <ListItemText \n                                disableTypography={true} \n                                primary={\n                                    <a className={classes.url} href=\"https://reactjs.org/\" rel=\"noopener noreferrer\" target=\"_blank\"> React.js </a>\n                                } \n                                style={{textAlign: \"center\"}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText \n                                disableTypography={true} \n                                primary={\n                                    <a className={classes.url} href=\"https://material-ui.com/\" target=\"_blank\" rel=\"noopener noreferrer\"> Material-UI </a>\n                                }\n                                style={{textAlign: \"center\"}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText \n                                disableTypography={true} \n                                primary={\n                                    <a className={classes.url} href=\"https://www.emailjs.com/\" target=\"_blank\" rel=\"noopener noreferrer\"> EmailJS </a>\n                                }\n                                style={{textAlign: \"center\"}}\n                            />\n                        </ListItem>\n                    </List>\n                </Grid>    \n                <Grid item lg={12} md={12} xs={12}>\n                    <Typography className={classes.content} style={{ fontSize: \"12px\" }}>\n                        Icons made by \n                        <a href=\"https://www.flaticon.com/authors/freepik\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Freepik\" style={{ color: \"#4DD779\" }}> Freepik </a> from <a href=\"https://www.flaticon.com/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: \"#4DD779\" }} title=\"Flaticon\"> www.flaticon.com</a>\n                    </Typography>\n                </Grid>\n            </Grid>         \n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport Home from './components/Home';\nimport Projects from './components/Projects';\nimport About from './components/About';\nimport Footer from './components/Footer';\nimport { makeStyles } from '@material-ui/styles';\nimport { Container } from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  app: {\n    backgroundColor: \"#2E3440\"\n  }\n}); \n\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.app}>\n        <BrowserRouter>\n        <Navigation />\n        <Container>\n          <Switch>\n            <Route path=\"/SjukdomCastle\" exact component={Home} />\n            <Route path=\"/SjukdomCastle/projects\" component={Projects} />\n            <Route path=\"/SjukdomCastle/contact\" component={About} />\n          </Switch>\n        </Container>\n        <Footer />\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.1a503fc3.svg\";","module.exports = __webpack_public_path__ + \"static/media/server.c186eb93.svg\";","module.exports = __webpack_public_path__ + \"static/media/ux.454618b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/database.ef7dec09.svg\";","module.exports = __webpack_public_path__ + \"static/media/computer.41351471.svg\";","module.exports = __webpack_public_path__ + \"static/media/cultures.66151fee.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.d9c36406.svg\";"],"sourceRoot":""}